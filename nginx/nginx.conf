### Nginx Load Balancer Example

upstream samplecluster {
  # The upstream elements lists all
  # the backend servers that take part in 
  # the Nginx load balancer example

  server localhost:8090;
  server localhost:8080;

}
### Nginx load balancer example runs on port 80
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  root /var/www/html;
  server_name _;

  location / {
    try_files $uri $uri/ =404;
  }

  # The proxy_pass setting will also make the
  # Nginx load balancer a reverse proxy
  location /sample {
    proxy_pass http://samplecluster/sample;
  }

} # End of Nginx load balancer and reverse proxy config file




# http {
#     upstream backend {
#         server backend1.example.com;
#         server backend2.example.com;
#         server 192.0.0.1 backup;
#     }

#     server {
#         location / {
#             proxy_pass http://backend;
#         }
#     }
# }


# events {}

# http {
#     upstream myapp {
#         server server1:8081;
#         server server2:8082;
#         server server3:8083;
#     }

#     server {
#         listen 80;

#         location / {
#             proxy_pass http://myapp;
#             # proxy_set_header Host $host;
#             # proxy_set_header X-Real-IP $remote_addr;
#             # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             # proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }


# # worker_processes 4;
# # events {  worker_connections 1024; }
# # http {
# #     # Define the group of servers available
# #     upstream app {
# #         server server1:8080;
# #         server server2:8080;
# #         server server3:8080;
# #     }
# #     server {
# #         # Server group will respond to port 80
# #         listen 80;
# #         location / {
# #             proxy_pass http://app;
# #         }
# #     }
# # }

